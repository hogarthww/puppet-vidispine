<?xml version="1.0" encoding="UTF-8"?>
<ConfigurationDocument>
  <!-- Application Server Properties -->
  <configurationProperty>
    <key>applicationServer</key>
    <value>glassfish</value>
  </configurationProperty>
  <configurationProperty>
    <key>applicationServerPort</key>
    <value><%= scope.lookupvar('vidispine::glassfish_http_port') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>applicationServerHostname</key>
    <value>localhost</value>
  </configurationProperty>
  <configurationProperty>
    <key>applicationServerStartupScript</key>
    <value>no</value>
  </configurationProperty>
  <configurationProperty>
    <key>wipeIndex</key>
    <value>no</value>
  </configurationProperty>
  <!-- JBoss Properties -->
  <configurationProperty>
    <key>jbossDir</key>
    <value os="linux">/opt/jboss</value>
    <value os="windows">c:\vidispine\jboss</value>
  </configurationProperty>
  <configurationProperty>
    <key>jbossInstance</key>
    <value>vidispine</value>
  </configurationProperty>
  <configurationProperty>
    <key>jbossAdminPort</key>
    <value>8080</value>
  </configurationProperty>
  <configurationProperty>
    <key>jbossAdminUser</key>
    <value>admin</value>
  </configurationProperty>
  <configurationProperty>
    <key>jbossAdminPassword</key>
    <value>admin</value>
  </configurationProperty>
  <!-- Glassfish properties -->
  <configurationProperty>
    <key>glassfishDir</key>
    <value os="linux"><%= scope.lookupvar('vidispine::glassfish_parent_dir') %>/<%= scope.lookupvar('vidispine::glassfish_install_dir') %>/glassfish</value>
    <value os="windows">c:\glassfish3</value>
  </configurationProperty>
  <configurationProperty>
    <key>glassfishAdminPort</key>
    <value><%= scope.lookupvar('vidispine::glassfish_das_portbase').to_i + 48 %></value>
  </configurationProperty>
  <configurationProperty>
    <key>glassfishAdminUser</key>
    <value><%= scope.lookupvar('vidispine::glassfish_asadmin_user') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>glassfishAdminPassword</key>
    <value><%= scope.lookupvar('vidispine::glassfish_asadmin_password') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>glassfishDomain</key>
    <value><%= scope.lookupvar('vidispine::glassfish_domain_name') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>glassfishDomainProperties</key>
    <value>jms.port=37676:domain.jmxPort=30001:orb.listener.port=30002:orb.ssl.port=30003:orb.mutualauth.port=30004:http.ssl.port=38443</value>
  </configurationProperty>
  <configurationProperty>
    <key>glassfishPatchCorbaOrb</key>
    <value>yes</value>
  </configurationProperty>
  <!-- Misc properties-->
  <configurationProperty>
    <key>setUpStorage</key>
    <value>no</value>
  </configurationProperty>
  <configurationProperty>
    <key>storageLocation</key>
    <value os="linux">/home/vidispine/storage</value>
    <value os="windows">c:\vidispine\storage</value>
  </configurationProperty>
  <configurationProperty>
    <key>setUpThumbnails</key>
    <value>no</value>
  </configurationProperty>
  <configurationProperty>
    <key>thumbnailLocation</key>
    <value os="linux">/home/vidispine/thumbnails</value>
    <value os="windows">c:\vidispine\thumbnails</value>
  </configurationProperty>
  <configurationProperty>
    <key>installPresetTemplates</key>
    <value>no</value>
  </configurationProperty>
  <configurationProperty>
    <key>glassfishSetMaxPermSize</key>
    <value>no</value>
  </configurationProperty>
  <!-- Database properties -->
  <configurationProperty>
    <key>databaseVendor</key>
    <value>postgres-<%= scope.lookupvar('vidispine::postgresql_version') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>databaseHostname</key>
    <value><%= scope.lookupvar('vidispine::postgresql_host') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>databasePort</key>
    <value><%= scope.lookupvar('vidispine::postgresql_port') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>databaseUser</key>
    <value><%= scope.lookupvar('vidispine::postgresql_user') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>databasePassword</key>
    <value><%= scope.lookupvar('vidispine::postgresql_password') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>databaseName</key>
    <value><%= scope.lookupvar('vidispine::postgresql_database') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>databaseRunMigration</key>
    <value>yes</value>
  </configurationProperty>
  <!-- Transcoder properies -->
  <configurationProperty>
    <key>transcoderUser</key>
    <value>vidispine</value>
  </configurationProperty>
  <configurationProperty>
    <key>transcoderPort</key>
    <value>8888</value>
  </configurationProperty>
  <configurationProperty>
    <key>transcoderDir</key>
    <value os="windows">c:\transcoder</value>
  </configurationProperty>
  <configurationProperty>
    <key>vidispineAdminUser</key>
    <value><%= scope.lookupvar('vidispine::vidispine_admin_user') %></value>
  </configurationProperty>
  <configurationProperty>
    <key>vidispineAdminPassword</key>
    <value><%= scope.lookupvar('vidispine::vidispine_admin_password') %></value>
  </configurationProperty>
  <!-- Vidispine Running Mode -->
  <configurationProperty>
    <key>runningAsSlave</key>
<% if scope.lookupvar('vidispine::vidispine_slave_license') -%>
    <value>yes</value>
<% else -%>
    <value>no</value>
<% end -%>
  </configurationProperty>
  <configurationProperty>
      <key>useExistingSlaveLicense</key>
      <value>no</value>
  </configurationProperty>
  <configurationProperty>
    <key>masterNodeAddress</key>
<% if scope.lookupvar('vidispine::vidispine_slave_license') -%>
    <value><%= scope.lookupvar('vidispine::vidispine_slave_license_master') %></value>
<% else -%>
    <value>http://master.com:8080/</value>
<% end -%>
  </configurationProperty>
  <configurationProperty>
    <key>slaveId</key>
<% if scope.lookupvar('vidispine::vidispine_slave_license') -%>
    <value><%= scope.lookupvar('vidispine::vidispine_slave_license_id') %></value>
<% else -%>
    <value>your-slave-id</value>
<% end -%>
  </configurationProperty>
  <!-- Config Solr -->
  <configurationProperty>
    <key>solrConfig</key>
    <value>no</value>
  </configurationProperty>

  <configurationProperty>
    <key>solrHome</key>
    <value os="linux"><%= scope.lookupvar('vidispine::glassfish_parent_dir') %>/<%= scope.lookupvar('vidispine::glassfish_install_dir') %>/glassfish/solrhome/solr</value>
    <value os="windows">c:\glassfish3\glassfish\solrhome\solr</value>
  </configurationProperty>

  <configurationProperty>
    <key>solrPath</key>
    <value>http://localhost:8080/solr</value>
  </configurationProperty>

  <configurationProperty>
    <key>overWriteNetwork</key>
    <value>yes</value>
  </configurationProperty>


  <configurationProperty>
    <key>glassfishHA</key>
<% if scope.lookupvar('vidispine::vidispine_cluster_enable') -%>
    <value>yes</value>
<% else -%>
    <value>no</value>
<% end -%>
  </configurationProperty>

  <configurationProperty>
    <key>glassfishCluster</key>
<% if scope.lookupvar('vidispine::vidispine_cluster_enable') -%>
    <value><%= scope.lookupvar('vidispine::glassfish_cluster_name') %></value>
<% else -%>
    <value>vs-cluster</value>
<% end -%>
  </configurationProperty>

  <configurationProperty>
    <key>solrCloud</key>
<% if scope.lookupvar('vidispine::vidispine_cluster_enable') -%>
    <value>yes</value>
<% else -%>
    <value>no</value>
<% end -%>
  </configurationProperty>
  
  <configurationProperty>
    <key>zookeeperHost</key>
<% if scope.lookupvar('vidispine::vidispine_cluster_enable') -%>
    <value></value>
<% else -%>
    <value>127.0.0.1</value>
<% end -%>
  </configurationProperty>

  <configurationProperty>
    <key>solrCloudCollectionName</key>
<% if scope.lookupvar('vidispine::vidispine_cluster_enable') -%>
    <value><%= scope.lookupvar('vidispine::solr_collection_name') %></value>
<% else -%>
    <value>collection1</value>
<% end -%>
  </configurationProperty>
  
</ConfigurationDocument>
